#!/usr/bin/env python3

# This Python file uses the following encoding: utf-8

import sys

from PySide2.QtCore import qDebug, Qt, Signal, Slot, QFile
from PySide2.QtWidgets import QApplication, QAction
from PySide2.QtUiTools import QUiLoader
from PySide2.QtGui import QIcon

class Helper():
    def __init__(self):
        pass

    def genAction(self, name=None, fn=None, data=None, icon=None, parent=None):
        if name and fn:
            if icon:
                if isinstance(icon,str):
                    icon = QIcon(icon)
                elif isinstance(icon,QIcon):
                    pass
                else:
                    icon = None
            if icon:
                action = QAction(icon,name,parent)
            else:
                action = QAction(name,parent)
            
            if data:
                action.setData(data)
            
            action.triggered.connect(fn)

            return action
        return None

class AppMainWindow(QApplication):
    def __init__(self):
        QApplication.__init__(self,[])
        self.menu = {}
        self.window = self.loadUi()
        self.window.show()
        #qDebug('{}'.format(self.window.menubar))
        #qDebug('{}'.format(self.window.statusbar))
        #qDebug('{}'.format(self.window.centralwidget))
        self.addMenuItem(["one","two"],["some","other",["menuitem"]])

    def loadUi(self):
        ui_file = QFile("mainwindow.ui")
        ui_file.open(QFile.ReadOnly)
        ui_loader = QUiLoader(self)
        window = ui_loader.load(ui_file)
        ui_file.close()
        return window
    
    @Slot()
    def test(self):
        qDebug("senderData:{}".format(self.sender().data()))

    def addMenuItem(self, *args, **kwargs):
        for name in args:
            if isinstance(name,list):
                self.addMenuItem(*name)
                continue
            if not isinstance(name,str) or name in self.menu:
                continue
            self.menu.setdefault(name,[])
            self.menu[name].append(self.window.menubar.addMenu(name))
            self.menu[name][0].addAction(Helper().genAction(name=name,fn=self.test,icon="/usr/share/icons/breeze/actions/32/arrow.svg",parent=self.menu[name][0],data=name))


if __name__ == "__main__":
    QApplication.setAttribute(Qt.AA_ShareOpenGLContexts)
    app = AppMainWindow()
    sys.exit(app.exec_())
